#include<iostream>
#include<cstdlib>
#include<string>
#include<ctime>
using namespace std;
const int MAX_BAD_GUESSES=7;

string chooseWord();
void rendergame(string guessedWord,int badGuessCount);
char readAGuess();
bool contains(string word, char guess);
string update(string guessedWord, string word, char guess);
bool GameOver(int badGuessCount, string word, string guessedWord);


int main(){
    srand(time(0));
    string word=chooseWord();
    string guessedWord=string(word.size(), '-');
    int badGuessCount=0;

    do {
        rendergame(guessedWord, badGuessCount);
        char guess=readAGuess();
        if(contains(word,guess)) guessedWord= update(guessedWord, word, guess);
        else badGuessCount++;
    } while (!GameOver(badGuessCount, word, guessedWord));

//    displayGameResult(badGuessCount, word, guessedWord);
        rendergame(guessedWord, badGuessCount);
    if (badGuessCount==MAX_BAD_GUESSES){

        cout<<"Sai bet, thua roi ha ha -_-, treo co thoi "<<endl;
        cout<<"Tu dung la: "<< word<<endl;
    }else{
        cout<<"Doan dung r, duoc lam he he, tang cai om >~< "<<endl;
    }

    return 0;
}
const string WORD_LIST[] = {
	"angle", "ant", "apple", "arch", "arm", "army",
        "baby", "bag", "ball", "band", "basin", "basket", "bath", "bed", "bee", "bell", "berry",
        "bird", "blade", "board", "boat", "bone", "book", "boot", "bottle", "box", "boy",
        "brain", "brake", "branch", "brick", "bridge", "brush", "bucket", "bulb", "button",
        "cake", "camera", "card",  "cart", "carriage", "cat", "chain", "cheese", "chest",
        "chin", "church", "circle", "clock", "cloud", "coat", "collar", "comb", "cord",
        "cow", "cup", "curtain", "cushion",
        "dog", "door", "drain", "drawer", "dress", "drop", "ear", "egg", "engine", "eye",
        "face", "farm", "feather", "finger", "fish", "flag", "floor", "fly",
        "foot", "fork", "fowl", "frame",
        "garden", "girl", "glove", "goat", "gun",
        "hair", "hammer", "hand", "hat", "head", "heart", "hook", "horn", "horse",
        "hospital", "house",
        "island", "jewel",
        "kettle", "key", "knee", "knife", "knot",
        "leaf", "leg", "library", "line", "lip", "lock",
        "map", "match", "monkey", "moon", "mouth", "muscle",
        "nail", "neck", "needle", "nerve", "net", "nose", "nut",
        "office", "orange", "oven", "parcel", "pen", "pencil", "picture", "pig", "pin",
        "pipe", "plane", "plate", "plow", "pocket", "pot", "potato", "prison", "pump",
        "rail", "rat", "receipt", "ring", "rod", "roof", "root",
        "sail", "school", "scissors", "screw", "seed", "sheep", "shelf", "ship", "shirt",
        "shoe", "skin", "skirt", "snake", "sock", "spade", "sponge", "spoon", "spring",
        "square", "stamp", "star", "station", "stem", "stick", "stocking", "stomach",
        "store", "street", "sun",
        "table", "tail", "thread", "throat", "thumb", "ticket", "toe", "tongue", "tooth",
        "town", "train", "tray", "tree", "trousers",
        "umbrella",
        "wall", "watch", "wheel", "whip", "whistle", "window", "wire", "wing", "worm"};
const int WORD_COUNT = sizeof(WORD_LIST) / sizeof(string);
string chooseWord(){
    int randomIndex=rand()% WORD_COUNT;
    return WORD_LIST[randomIndex];
    //return "book";
}
const string FIGURE[] = {
        "   -------------    \n"
        "   |                \n"
        "   |                \n"
        "   |                \n"
        "   |                \n"
        "   |     \n"
        " -----   \n",
        "   -------------    \n"
        "   |           |    \n"
        "   |                \n"
        "   |                \n"
        "   |                \n"
        "   |     \n"
        " -----   \n",
        "   -------------    \n"
        "   |           |    \n"
        "   |           O    \n"
        "   |                \n"
        "   |                \n"
        "   |     \n"
        " -----   \n",
        "   -------------    \n"
        "   |           |    \n"
        "   |           O    \n"
        "   |           |    \n"
        "   |                \n"
        "   |     \n"
        " -----   \n",
        "   -------------    \n"
        "   |           |    \n"
        "   |           O    \n"
        "   |          /|    \n"
        "   |                \n"
        "   |     \n"
        " -----   \n",
        "   -------------    \n"
        "   |           |    \n"
        "   |           O    \n"
        "   |          /|\\  \n"
        "   |                \n"
        "   |     \n"
        " -----   \n",
        "   -------------    \n"
        "   |           |    \n"
        "   |           O    \n"
        "   |          /|\\  \n"
        "   |          /     \n"
        "   |     \n"
        " -----   \n",
        "   -------------    \n"
        "   |           |    \n"
        "   |           O    \n"
        "   |          /|\\  \n"
        "   |          / \\  \n"
        "   |     \n"
        " -----   \n"
    };
void rendergame(string guessedWord,int badGuessCount){
    cout<<FIGURE[badGuessCount]<<endl;
    cout<< guessedWord<<endl;
    cout<<"Toi ghe, sai bet "<<badGuessCount<<" ki tu r he "<<endl;
}
bool contains(string word, char guess){
    for(int c: word){
        if(c==guess) return true;
    }
    return false;
}
string update(string guessedWord, string word, char guess){
    for(int i=0;i<word.size();++i){
        if(word[i]==guess) guessedWord[i]=guess;
    }
    return guessedWord;
}
char readAGuess(){
    cout<<"Doan mot ki tu, moi bat dau: ";
    char c;
    cin>>c;
    return c;
}
bool GameOver(int badGuessCount, string word, string guessedWord){
    if(badGuessCount==MAX_BAD_GUESSES) return true;
    if(word==guessedWord) return true;
    return false;
}
